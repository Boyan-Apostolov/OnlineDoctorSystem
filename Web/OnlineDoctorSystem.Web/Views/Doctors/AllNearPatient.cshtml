@{
    this.ViewData["Title"] = $"Всички близки доктори";
}
@using OnlineDoctorSystem.Data.Models.Enums
@model OnlineDoctorSystem.Web.ViewModels.Doctors.AllDoctorViewModel
@if (!this.Model.Doctors.Any())
{
    <h1>Няма намерени доктори по зададените параметри!</h1>
}
else
{
    <h1 class="text-center">Най-близки доктори:</h1>
    <div class="row text-center justify-content-center">
        @foreach (var doctor in @Model.Doctors)
        {
            <div class="card text-center d-inline-block col-xl-3 col-md-2 col-sm-5">
                <img class="card-img-top mx-auto img-fluid" src="@doctor.ImageUrl" alt="@doctor.Name снимка">
                <div class="card-body">
                    @if (@doctor.Name.Length >= 15)
                    {
                        <h5 class="card-title">Д-р @doctor.Name</h5>
                    }
                    else
                    {
                        <h4 class="card-title">Д-р @doctor.Name</h4>
                    }

                    <p class="card-text">@doctor.Town.Name - @doctor.Specialty.Name</p>

                    @for (int i = 0; i < Math.Round(@doctor.AverageRating); i++)
                    {
                        <i class="fas fa-star btn-outline-warning"></i>
                    }

                    <div>
                        @if (doctor.IsWorkingWithNZOK)
                        {
                            <span class="badge badge-info" title="Работи с НЗОК">
                                <img src="/images/nzok.png" width="25px" height="25px" />
                                <span>Работи с НЗОК</span>
                            </span>
                        }
                        @if (doctor.IsWorkingWithChildren)
                        {
                            <span class="badge badge-warning text-center  d-inline" title="Работи с деца">
                                <i class="fas fa-child"></i>
                                <span>Работи с деца</span>
                            </span>
                        }

                    </div>
                    <a href="@doctor.Url" class="btn btn-success btn-outline-warning text-white">Преглед</a>
                </div>
            </div>
        }
        <hr />
    </div>
    <partial name="_NearDoctorsPagingPartial" model="@Model" />
    <div id="map_wrapper">
        <div id="map_canvas" class="mapping"></div>
    </div>
}
<style>
    #map_wrapper {
        height: 400px;
    }

    #map_canvas {
        width: 100%;
        height: 100%;
    }
</style>
@section Scripts {
    <script>
        jQuery(function ($) {
            // Asynchronously Load the map API 
            var script = document.createElement('script');
            script.src = "//maps.googleapis.com/maps/api/js?sensor=false&callback=initialize";
            document.body.appendChild(script);
        });

        function initialize() {
            var map;
            var bounds = new google.maps.LatLngBounds();
            var mapOptions = {
                mapTypeId: 'roadmap'
            };

            // Display a map on the page
            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            map.setTilt(45);

            // Multiple Markers
            var markers = [
                ['Veliko Tarnovo, Bulgaria', 43.075672, 25.617151]
            ];

            // Info Window Content
            var infoWindowContent = [
                ['<div class="info_content">' +
                    '<h3>Veliko Tarnovo</h3>' +
                    '<p>8 Doctors</p>' + '</div>'],
                ['<div class="info_content">' +
                    '<h3>Palace of Westminster</h3>' +
                    '<p>The Palace of Westminster is the meeting place of the House of Commons and the House of Lords, the two houses of the Parliament of the United Kingdom. Commonly known as the Houses of Parliament after its tenants.</p>' +
                    '</div>']
            ];

            // Display multiple markers on a map
            var infoWindow = new google.maps.InfoWindow(), marker, i;

            // Loop through our array of markers & place each one on the map  
            for (i = 0; i < markers.length; i++) {
                var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
                bounds.extend(position);
                marker = new google.maps.Marker({
                    position: position,
                    map: map,
                    title: markers[i][0]
                });

                // Allow each marker to have an info window    
                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infoWindow.setContent(infoWindowContent[i][0]);
                        infoWindow.open(map, marker);
                    }
                })(marker, i));

                // Automatically center the map fitting all markers on the screen
                map.fitBounds(bounds);
            }

            // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
            var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function (event) {
                this.setZoom(14);
                google.maps.event.removeListener(boundsListener);
            });

        }
    </script>
}